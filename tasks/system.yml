---


- name: Ensure that the Flask project's user exists and is in the www-data group
  user:
    name: "{{ flask_user }}"
    createhome: yes
    shell: /bin/bash
    append: yes
    groups: www-data
    generate_ssh_key: yes

- name: Ensure that our base project path has proper permissions
  file:
    path: "{{ flask_path }}"
    state: directory
    owner: "{{ flask_user }}"
    group: www-data
    mode: ug=rwx,o=

- block:
  - set_fact:
      deploy_key_filepath: "/home/{{ flask_user }}/.ssh/deploy_key"

  - name: Send private deploy key to the remote project's user if applicable
    copy:
      src: "{{ flask_deploy_key_filepath }}"
      dest: "{{ deploy_key_filepath }}"
      owner: "{{ flask_user }}"
      mode: 0600

  when: "flask_deploy_key_filepath != ''"

- name: Install additional packages that could be required by the Flask app
  apt:
    state: present
    name:
      - gettext
      - python3-venv
      - uwsgi
      - uwsgi-plugin-python3
      - uwsgi-src
      - uuid-dev
      - libcap-dev
      - libpcre3-dev

- name: Add Python's deadsnakes repository
  apt_repository: repo="ppa:deadsnakes/ppa"

- name: Install the python version required for the Flask application
  apt:
    state: present
    name:
      - "{{ flask_python_version }}"
      - "{{ flask_python_version }}-dev"
      - "{{ flask_python_version }}-venv"

- name: Ensure that the required folders exist
  file: path={{ item }} state=directory owner={{ flask_user }}
  with_items:
    - "{{ flask_path }}"

- block:
  - name: Ensure that apt-transport-https is installed
    apt: name=apt-transport-https state=present

  - name: Add Nodesource apt key
    apt_key:
      url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
      id: "68576280"
      state: present

  - name: Add NodeSource repositories for Node.js
    apt_repository:
      repo: "{{ item }}"
      state: present
    with_items:
      - "deb https://deb.nodesource.com/node_{{ flask_node_assets_nodejs_version }} {{ ansible_distribution_release }} main"
      - "deb-src https://deb.nodesource.com/node_{{ flask_node_assets_nodejs_version }} {{ ansible_distribution_release }} main"
    register: node_repo

  - name: Update apt cache if repo was added
    apt: update_cache=yes
    when: node_repo.changed

  - name: Ensure Node.js and npm are installed
    apt: "name=nodejs={{ flask_node_assets_nodejs_version|regex_replace('x', '') }}* state=present"

  when: flask_node_assets_enabled
